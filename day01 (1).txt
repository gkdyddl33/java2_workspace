
 *** day01

	오리엔테이션

	강사 : 한동석
	이메일 : tedhan1204@gmail.com
	메일제목 : "JAVA2 1900 강하영"
	메일내용 : 텍스트로 작성해서 보내기.txt -> 오류내용작성

	수업일정
		7.13(월) ~ 8.05(수)
		월수금 / 월수 (10일)

	수업자료 백업
		메일내게쓰기,USB,클라우드..

	강사자료 공유
		1. koreastudyroom.com
 		2. kedudisk.com
			아이디 : it1000
			비밀번호 : 학생11!
			폴더비번 : 1900JAVA

	지각 결석안되요~

----------------------------------------

 [ Casting : 타입변환 ]

	<타입으로 두개를 비교>
	up casting
		부모 타입에 자식 값을 넣는 문법
		하지만 메모리상 부모의 용량이 더 작기 때문에
		자식에서 추가한 필드는 up casting 객체로 접근할 수 없다.
		부모의 틀에 들어가기 위해서는 자식에서 추가한 필드가 잘려야하기
		때문이다.(+a)

	down casting
		자식 타입에 up casting된 객체를 넣는 문법
		up casting된 객체는 자식에서 추가한 필드에 접근할 수 없다.
		다시 접근하기 위해서는 자식 틀에 up casting된 객체를 넣어주어야
		한다. up casting된 객체는 자식 값이므로 자식 타입에 넣을 수 있으			며, 잘렸던 필드들이 되살아난다(복구).
		
	* 자식 타입에 부모 값을 넣으면 오류!

 Casting의 목적

	여러 타입을 하나로 묶어 관리하자!
	자식 객체는 부모 타입이므로 타입이 하나로 묶일 수 있다.
	자식 필드에 모두 접근하고 싶다면, down casting을 사용한다.
	ex) 빵 -> 호밀빵,크림빵,식빵

	예를 들어 매개변수에 어떤 자식 값이 들어올 지 모를 때에는
	부모 타입 객체 하나로 받은 후(up casting) down casting을 통해
	필드에 접근하는 방식으로 자주 사용한다.

----------------------------------------

 [ 타입비교 ]

	객체명 instanceof 클래스타입
	   A		   B

	A가 B타입이면 true 아니면 false

----------------------------------------

 [ 추상클래스 : 불완전한 클래스 ]

	추상적인 필드를 가지고 있는 클래스를 추상 클래스라고 한다.
	변수는 선언하는 순간 구체화되므로 메소드를 추상화할 수 있고
	추상 메소드란 바디(중괄호)가 없는 채로 선언된다.
	자식에 강제성을 부여하기 위해서는 추상 메소드로 선언하고
	추상클래스를 상속받은 자식에서 추상 메소드를 구현한다.
	구현되지 않은 필드는 메모리에 할당될 수 없으며, 만약 추상클래스에 구체화를
	목적으로 한다면 추상 클래스타입의 객체를 선언하게 되면 생성자에 중괄호가 
	생기며 구현해야할 메소드에 바디가 생긴다. 보통 상속 후 자식에서 구현하며,
	일반 메소드도 선언할 수 있다.

 추상클래스 선언
	abstract class 클래스명{
		필드...
		abstract 리턴타입 메소드명(매개변수,..); -> 추상 메소드
		....
	}

----------------------------------------

 [ 인터페이스 : 틀 ]

	추상클래스를 고도화시킨 문법(강제성)
	추상메소드만 선언 가능하고, 상수만 선언해야 한다.
	다른 클래스에서 인터페이스를 구현하기 위해서는 implements 키워드를 사용한다.
	인터페이스를 지정받은 클래스는 구현 클래스라고 말하며,
	반드시 모든 추상메소드를 구현해야 한다(틀은 수정이 되면 안된다).	
	
